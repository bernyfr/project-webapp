name: WebApp CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
    tags:     [ "v*.*.*" ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  LOCATION: us
  CLUSTER_STAGING: staging-webapp
  CLUSTER_PROD: prod-webapp
  NAMESPACE_STAGING: staging
  NAMESPACE_PROD: production
  CHART_PATH: ./helm/webapp
  IMAGE_NAME: hello-app
  REPOSITORY: webapp-repo    # <-- replace if you want a different Artifact Registry repo name

permissions:
  contents: read

jobs:
  build:
    name: Build & Push Docker
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta.outputs.image_tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Install gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Auth to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.LOCATION }}-docker.pkg.dev --quiet

      - name: Compute image tag (SHA for branches, tag for releases)
        id: meta
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG="${GITHUB_REF#refs/tags/}"   # e.g. v1.2.3
          else
            TAG="$(git rev-parse --short HEAD)"
          fi
          echo "image_tag=${TAG}" >> $GITHUB_OUTPUT
          echo "Using image tag: ${TAG}"

      - name: Build image
        run: |
          docker build -t ${{ env.LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.image_tag }} ./app

      - name: Push image
        run: |
          docker push ${{ env.LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.image_tag }}

  deploy-staging:
    name: Deploy to Staging
    if: startsWith(github.ref, 'refs/heads/')
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v4

      - name: Install gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Auth to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v4

      - name: Install Helm
        uses: azure/setup-helm@v4

      - name: Get GKE credentials (staging)
        run: |
          gcloud container clusters get-credentials "${{ env.CLUSTER_STAGING }}" \
            --region "${{ env.REGION }}" --project "${{ env.PROJECT_ID }}"

      - name: Create namespace (idempotent)
        run: |
          kubectl create namespace ${{ env.NAMESPACE_STAGING }} --dry-run=client -o yaml | kubectl apply -f -

      - name: Helm lint
        run: |
          helm lint ${{ env.CHART_PATH }} -f ${{ env.CHART_PATH }}/values-staging.yaml

      - name: Deploy with Helm (staging)
        run: |
          helm upgrade --install webapp ${{ env.CHART_PATH }} \
            -f ${{ env.CHART_PATH }}/values-staging.yaml \
            --namespace ${{ env.NAMESPACE_STAGING }} \
            --set image.repository=${{ env.LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }} \
            --set image.tag=${{ needs.build.outputs.image_tag }}

  approve-production:
    name: Manual Approval & Policy Checks
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Validate actor is allowed
        run: |
          echo "Triggered by: $GITHUB_ACTOR"
          ALLOWED="${{ secrets.ALLOWED_PROD_USERS }}"
          if ! echo "$ALLOWED" | tr ',' '\n' | grep -Fxq "$GITHUB_ACTOR"; then
            echo "❌ $GITHUB_ACTOR is not allowed to deploy to production."
            exit 1
          fi
          echo "Actor allowed ✔️"

      - name: Validate SemVer tag
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          echo "Tag: $TAG"
          if [[ ! "$TAG" =~ ^v?[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Tag must be SemVer (vX.Y.Z)"; exit 1
          fi
          echo "SemVer OK ✔️"

  deploy-production:
    name: Deploy to Production
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build, approve-production]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Install gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Auth to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v4

      - name: Install Helm
        uses: azure/setup-helm@v4

      - name: Get GKE credentials (prod)
        run: |
          gcloud container clusters get-credentials "${{ env.CLUSTER_PROD }}" \
            --region "${{ env.REGION }}" --project "${{ env.PROJECT_ID }}"

      - name: Create namespace (idempotent)
        run: |
          kubectl create namespace ${{ env.NAMESPACE_PROD }} --dry-run=client -o yaml | kubectl apply -f -

      - name: Helm lint
        run: |
          helm lint ${{ env.CHART_PATH }} -f ${{ env.CHART_PATH }}/values-prod.yaml

      - name: Deploy with Helm (production)
        run: |
          helm upgrade --install webapp ${{ env.CHART_PATH }} \
            -f ${{ env.CHART_PATH }}/values-prod.yaml \
            --namespace ${{ env.NAMESPACE_PROD }} \
            --set image.repository=${{ env.LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }} \
            --set image.tag=${{ needs.build.outputs.image_tag }}
